当我提到对综合成绩数组进行排序时，我使用了冒泡排序。以下是对整个算法步骤的描述：

1. **输入学生信息：**
   - 提示用户输入班级学生人数（`numStudents`）。
   - 使用循环接收每个学生的四个成绩。

2. **计算综合成绩：**
   - 定义数组 `compositeScores[numStudents]` 用于存储每个学生的综合成绩。
   - 使用循环遍历每个学生，计算其综合成绩并存储到 `compositeScores` 数组中。
   - 同时计算总分 `totalScore`。

3. **输出学生综合成绩和等级：**
   - 在第二步的循环中，输出每个学生的综合成绩，并根据不同分数段输出对应的等级。

4. **冒泡排序：**
   - 使用嵌套循环进行冒泡排序，外层循环控制遍历次数，内层循环进行相邻元素的比较和交换。
   - 如果 `compositeScores[j]` 小于 `compositeScores[j + 1]`，则交换这两个元素，确保较大的元素在前。
   - 通过多次遍历，将数组由高到低排序。

5. **输出排序后的综合成绩：**
   - 使用循环输出排序后的 `compositeScores` 数组，即学生综合成绩由高到低的顺序。

6. **计算班级总分和平均分：**
   - 在最外层循环结束后，计算班级的总分 `totalScore`。
   - 计算平均分 `averageScore` 为总分除以学生人数。

7. **输出班级总分和平均分：**
   - 输出计算得到的班级总分和平均分。

整体来说，这个算法首先收集学生信息和成绩，计算综合成绩并输出等级，然后通过冒泡排序对综合成绩进行排序，最后输出排序后的综合成绩以及班级总分和平均分。
